{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","selected","setSelected","goodsList","goods","visibleGoods","filter","good","length","sort","good1","good2","ALPHABET","localeCompare","LENGTH","reverse","getReorderedGoods","useEffect","className","type","onClick","name","value","onChange","e","target","groupByLength","map","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCP,mBAAS,GAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KAcMC,EAAY,kBA9CpB,SACEC,EACAL,EACAH,EACAK,GAEA,IAAMI,EAAe,YAAID,GAAOE,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUP,KAmB9D,OAjBAI,EAAaI,MAAK,SAACC,EAAOC,GACxB,OAAQZ,GACN,KAAKT,EAASsB,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKrB,EAASwB,OACZ,OAAOJ,EAAMF,OAASG,EAAMH,OAE9B,QACE,OAAO,MAITZ,GACFS,EAAaU,UAGRV,EAqBiBW,CACtBzB,EAAiBQ,EAAUH,EAAYK,IAOzC,OAJAgB,qBAAU,WACRd,OAIA,sBAAKe,UAAU,MAAf,WACIxB,GACA,wBACEwB,UAAU,uCAIVC,KAAK,SACLC,QAAS,kBAAMzB,GAAa,IAN9B,mBAYDD,GACC,sBAAKwB,UAAU,iBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,wBACEA,UAAU,kCAIVC,KAAK,SACLC,QAAS,kBAAMpB,EAAYV,EAASsB,WANtC,iCAWA,wBACEM,UAAU,qCAIVC,KAAK,SACLC,QAAS,kBAAMpB,EAAYV,EAASwB,SANtC,4BAWA,wBACEI,UAAU,qCAIVC,KAAK,SACLC,QAAS,kBAAMvB,GAAeD,IANhC,qBAWA,wBACEsB,UAAU,oCAIVC,KAAK,SACLC,QAAS,kBA1EnBvB,GAAc,GACdG,EAAYV,EAASQ,WACrBI,EAAY,IAkEJ,mBAWA,qBAAKgB,UAAU,kCAAf,SAKE,wBACEG,KAAK,YACLH,UAAU,iBACVI,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAnFF,SAACA,GACrBtB,GAAasB,EAAEC,OAAOH,OAkFOI,CAAcF,IAJjC,SAvFU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IA6FrBG,KAAI,SAAAnB,GAAM,OACvB,wBAEEc,MAAOd,EAFT,SAIGA,GAHIA,aAUf,oBAAIU,UAAU,sBAAd,SACGf,IAAYwB,KAAI,SAACpB,GAAD,OACf,oBACEW,UAAU,mBADZ,SAIGX,GAFIA,eCnKrBqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6676bb3d.chunk.js","sourcesContent":["import React, { ChangeEvent, useState, useEffect } from 'react';\nimport 'bulma/css/bulma.min.css';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  selected: number,\n) {\n  const visibleGoods = [...goods].filter(good => good.length <= selected);\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [selected, setSelected] = useState(1);\n\n  const minLengthList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  const resetToDefault = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n    setSelected(1);\n  };\n\n  const groupByLength = (e: ChangeEvent<HTMLSelectElement>) => {\n    setSelected(+e.target.value);\n  };\n\n  const goodsList = () => getReorderedGoods(\n    goodsFromServer, sortType, isReversed, selected,\n  );\n\n  useEffect(() => {\n    goodsList();\n  });\n\n  return (\n    <div className=\"App\">\n      {!isStarted && (\n        <button\n          className=\"\n            App__start-button\n            button\n            is-primary\"\n          type=\"button\"\n          onClick={() => setIsStarted(true)}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <div className=\"App__list list\">\n          <div className=\"list__options options\">\n            <button\n              className=\"\n                options__button\n                button\n                is-info\"\n              type=\"button\"\n              onClick={() => setSortType(SortType.ALPHABET)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className=\"\n                options__button\n                button\n                is-success\"\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              className=\"\n                options__button\n                button\n                is-warning\"\n              type=\"button\"\n              onClick={() => setIsReversed(!isReversed)}\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"\n                options__button\n                button\n                is-danger\"\n              type=\"button\"\n              onClick={() => resetToDefault()}\n            >\n              Reset\n            </button>\n\n            <div className=\"\n              options__select\n              select\n              is-link\"\n            >\n              <select\n                name=\"minLength\"\n                className=\"select is-link\"\n                value={selected}\n                onChange={(e) => groupByLength(e)}\n              >\n                {minLengthList.map(length => (\n                  <option\n                    key={length}\n                    value={length}\n                  >\n                    {length}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <ul className=\"list__goods content\">\n            {goodsList().map((good) => (\n              <li\n                className=\"list__goods-item\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}